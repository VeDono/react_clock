{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","toUTCString","slice","timerId","this","window","setInterval","setState","getCurrentTime","console","info","clearInterval","name","props","className","React","Component","App","clockName","hasClock","handlerClockOff","event","preventDefault","handlerClockOn","getRandomName","document","addEventListener","_","prevState","debug","removeEventListener","value","now","toString","ReactDOM","render","getElementById"],"mappings":"sNAOaA,EAAb,4MACEC,MAAoB,CAClBC,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFhD,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAER,MAAOF,EAAMW,mBAE7BC,QAAQC,KAAK,EAAKZ,MAAMC,SACvB,OAZP,kCAeE,WACEM,OAAOM,cAAcP,KAAKD,WAhB9B,oBAuBE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGV,KAAKN,MAAMC,cAnCtB,6BAmBE,WACE,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OApBhD,GAA2Ba,IAAMC,WCFpBC,EAAb,4MACEnB,MAAkB,CAChBoB,UAAW,UACXC,UAAU,GAHd,EAMEhB,QAAU,EANZ,EAgCEiB,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKf,SAAS,CAAEY,UAAU,KAnC9B,EAsCEI,eAAiB,WACf,EAAKhB,SAAS,CAAEY,UAAU,KAvC9B,uDAQE,WAA2B,IAAD,OACxBf,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEW,UAAWD,EAAIO,oBAC9B,MAEHC,SAASC,iBAAiB,cAAetB,KAAKgB,iBAE9CK,SAASC,iBAAiB,QAAStB,KAAKmB,kBAf5C,gCAkBE,SAAmBI,EAAOC,GACpBxB,KAAKN,MAAMqB,UAAYS,EAAUV,YAAcd,KAAKN,MAAMoB,WAE5DT,QAAQoB,MAAR,uBAA8BD,EAAUV,UAAxC,eAAwDd,KAAKN,MAAMoB,cArBzE,kCAyBE,WACEb,OAAOM,cAAcP,KAAKD,SAE1BsB,SAASK,oBAAoB,cAAe1B,KAAKgB,iBACjDK,SAASK,oBAAoB,QAAS1B,KAAKmB,kBA7B/C,oBAgDE,WACE,IAAQL,EAAcd,KAAKN,MAAnBoB,UAER,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECV,KAAKN,MAAMqB,UAAY,cAAC,EAAD,CAAOP,KAAMM,UAvD7C,4BA0CE,WACE,IAAMa,EAAQ/B,KAAKgC,MAAMC,WAAW/B,OAAO,GAE3C,MAAM,SAAN,OAAgB6B,OA7CpB,GAAyBhB,IAAMC,WCF/BkB,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.435c9ec9.chunk.js","sourcesContent":["import React from 'react';\nimport { ClockState } from '../types';\n\ntype Props = {\n  name: string\n};\n\nexport class Clock extends React.Component<Props> {\n  state: ClockState = {\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: Clock.getCurrentTime() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today);\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  static getCurrentTime() {\n    return new Date().toUTCString().slice(-12, -4);\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { AppState } from './types';\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: App.getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handlerClockOff);\n\n    document.addEventListener('click', this.handlerClockOn);\n  }\n\n  componentDidUpdate(_: {}, prevState: AppState):void {\n    if (this.state.hasClock && prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handlerClockOff);\n    document.removeEventListener('click', this.handlerClockOn);\n  }\n\n  handlerClockOff = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handlerClockOn = () => {\n    this.setState({ hasClock: true });\n  };\n\n  static getRandomName(): string {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  }\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}